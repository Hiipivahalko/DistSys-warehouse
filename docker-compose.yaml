version: '3.8'

volumes:
  redis-db:

services: 
    front-end:
      container_name: front-end
      build:
        context: ./warehouse-front
        dockerfile: Dockerfile
      volumes:
       - ./warehouse-front:/usr/app
       - /usr/app/node_modules
      ports:
        - 3000:3000
      environment:
        - CHOKIDAR_USEPOLLING=true
      env_file:
        - ./.env

    redis-server:
      restart: always
      container_name: redis-server
      image: redis:6.2.6
      ports:
        - 6379:6379
      volumes:
        - redis-db:/data
      command: redis-server --save 60 1 --loglevel warning
  
    inventory-service:
      restart: always
      container_name: inventory-service
      build:
        context: ./inventory-service
        dockerfile: Dockerfile
      volumes:
       - ./inventory-service:/usr/app
       - /usr/app/node_modules
      ports:
        - 4000:4000
      environment:
        - CHOKIDAR_USEPOLLING=true
        - MONGO_URI=${MONGO_URI}
      healthcheck:
        test: ["CMD", "wget", "--tries=1", "--spider", "http://inventory-service:4000"]
        interval: 60s
        timeout: 15s
        retries: 3
        start_period: 15s
    
    inventory-worker:
      restart: always
      build:
        context: ./inventory-worker
        dockerfile: Dockerfile
      volumes:
       - ./inventory-worker:/usr/app
       - /usr/app/node_modules
      ports:
        - 4001
      environment:
        - CHOKIDAR_USEPOLLING=true
        - MONGO_URI=${MONGO_URI}
      deploy:
        replicas: 3
      healthcheck:
        test: ["CMD", "wget", "--tries=1", "--spider", "http://inventory-worker:4001"]
        interval: 60s
        timeout: 15s
        retries: 3
        start_period: 15s


    order-service:
      restart: always
      container_name: order-service
      build:
        context: ./order-service
        dockerfile: Dockerfile
      volumes:
       - ./order-service:/usr/app
       - /usr/app/node_modules
      ports:
        - 5001:5000
      environment:
        - CHOKIDAR_USEPOLLING=true
        - MONGO_URI=${MONGO_URI}
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PORT=${REDIS_PORT}
      healthcheck:
        test: ["CMD", "wget", "--tries=1", "--spider", "http://order-service:5000"]
        interval: 60s
        timeout: 15s
        retries: 3
        start_period: 15s
      depends_on:
        - redis-server
    
    autoheal:
      restart: always
      image: willfarrell/autoheal
      environment:
        - AUTOHEAL_CONTAINER_LABEL=all
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
